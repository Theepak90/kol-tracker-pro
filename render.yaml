services:
  - type: web
    name: kolnexus-backend
    env: node
    repo: https://github.com/Theepak90/kol-tracker-pro.git
    buildCommand: cd backend && npm install --legacy-peer-deps --production
    startCommand: cd backend && node simple-server.js
    plan: free
    region: oregon
    autoDeploy: true
    numInstances: 1
    disk:
      name: backend-disk
      size: 1GB
      mount: /opt/render/project/src
    envVars:
      - key: NODE_ENV
        value: production
      - key: MONGODB_URI
        sync: false
      - key: PORT
        value: 3000
      - key: JWT_SECRET
        generateValue: true
      - key: CORS_ORIGIN
        value: https://kol-tracker-pro.vercel.app,https://kolnexus-backend.onrender.com,https://kolnexus.vercel.app,https://*.vercel.app
      - key: KEEP_ALIVE
        value: "true"
    healthCheckPath: /api
    domains:
      - kolnexus-backend.onrender.com

  - type: web
    name: kolnexus-telethon
    env: python
    repo: https://github.com/Theepak90/kol-tracker-pro.git
    buildCommand: cd backend/telethon_service && pip install -r requirements.txt
    startCommand: cd backend/telethon_service && python main.py
    plan: free
    region: oregon
    autoDeploy: true
    numInstances: 1
    envVars:
      - key: API_ID
        sync: false
      - key: API_HASH
        sync: false
      - key: SESSION_NAME
        value: telegram_session
      - key: MONGODB_URI
        sync: false
      - key: PORT
        value: 8000
      - key: KEEP_ALIVE
        value: "true"
    healthCheckPath: /health
    domains:
      - kolnexus-telethon.onrender.com

# Add a cron job to keep services alive
  - type: cron
    name: keep-alive-job
    env: node
    repo: https://github.com/Theepak90/kol-tracker-pro.git
    schedule: "*/10 * * * *"  # Every 10 minutes
    buildCommand: echo "Keep alive job"
    startCommand: |
      curl -f https://kolnexus-backend.onrender.com/health || echo "Backend ping failed"
      curl -f https://kolnexus-telethon.onrender.com/health || echo "Telethon ping failed" 